#!/usr/bin/perl -w
# Foswiki - The Free and Open Source Wiki, http://foswiki.org/
#
# Copyright (C) 2009-2011 Michael Daum http://michaeldaumconsulting.com
# 
# For licensing info read LICENSE file in the Foswiki root.
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details, published at 
# http://www.gnu.org/copyleft/gpl.html

use strict;
use warnings;

# Set library paths in @INC, at compile time
BEGIN {
  if (-e './setlib.cfg') {
    unshift @INC, '.';
  } elsif (-e '../bin/setlib.cfg') {
    unshift @INC, '../bin';
  }

  $ENV{FOSWIKI_ACTION} = 'solrsearch_rest';
  $Foswiki::cfg{SwitchBoard}{solrsearch_rest} = {
    package => 'Foswiki::Plugins::SolrPlugin', 
    function => 'solrsearch_rest',
    context  => { solrsearch_rest => 1 },
  };

  require 'setlib.cfg';
}

use Foswiki ();
use Foswiki::UI ();
use Foswiki::Plugins::SolrPlugin ();
use Foswiki::Contrib::VirtualHostingContrib::VirtualHost();

my $verbose = 1;
my $hostname;

foreach my $arg (@ARGV) {
  if ($arg =~ /^(.*)=(.*)$/) {
    if ($1 eq 'verbose') {
      $verbose = ($2 eq 'on')?1:0;
    } elsif ($1 eq 'host') {
      $hostname = $2;
    }
  }
}

if ($hostname && $hostname ne '*') {
  Foswiki::Contrib::VirtualHostingContrib::VirtualHost->run_on($hostname, sub {
    $Foswiki::engine->run();
  });
} else {
  Foswiki::Contrib::VirtualHostingContrib::VirtualHost->run_on_each(sub {
    $Foswiki::engine->run();
  });
}

package Foswiki::Plugins::SolrPlugin;

sub solrsearch_rest {
  printf("=> Processing %s\n", $Foswiki::Contrib::VirtualHostingContrib::VirtualHost::CURRENT) if $verbose;
  my $searcher = Foswiki::Plugins::SolrPlugin::getSearcher();
  print $searcher->restSOLRSEARCH() . "\n";
}

1;
